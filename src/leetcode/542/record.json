{"simple": {"id": 62890558, "lang": "C++", "time": "1\u00a0\u5e74\uff0c11\u00a0\u6708", "status_display": "Compile Error", "runtime": "N/A", "url": "/submissions/detail/62890558/", "is_pending": "Not Pending", "title": "01 \u77e9\u9635", "timestamp": 1586916754, "memory": "N/A"}, "full": {"id": "62890558", "code": "class Solution {\npublic:\n    const int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n    void dfs(vector<vector<int>>& a, int x, int y, int &ans, int now) {\n        if(now >= ans) return ;\n        if(x == a.size() || x == 0 || y == 0 || y == a[0].size()) return ;\n        if(a[x][y] == 0) {\n            ans = min(ans, now);\n            return 0;\n        }\n        for(int i = 0; i < 4; ++i)\n            dfs(a, x + dx[i], y + dy[i], ans, now + 1);\n    }\n    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {\n        auto ret = matrix;\n        for(int i = 0; i < matrix.size(); ++i) {\n            for(int j = 0; j < matrix[i].size(); ++j) {\n                int ans = 1e9;\n                dfs(matrix, i, j, ans, 0);\n                ret[i][j] = ans;\n            }\n        }\n        return ret;\n    }\n};", "runtime": "N/A", "memory": "N/A", "rawMemory": "N/A", "statusDisplay": "Compile Error", "timestamp": 1586916754, "lang": "cpp", "passedTestCaseCnt": 0, "totalTestCaseCnt": 50, "sourceUrl": "/problems/01-matrix/", "question": {"titleSlug": "01-matrix", "title": "01 Matrix", "translatedTitle": "01 \u77e9\u9635", "questionId": "542", "__typename": "QuestionNode"}, "outputDetail": {"codeOutput": "{\"compile_error\": \"Line 3: Char 20: fatal error: array bound cannot be deduced from an in-class initializer\"}", "expectedOutput": "", "input": "", "compileError": "Line 3: Char 20: fatal error: array bound cannot be deduced from an in-class initializer", "runtimeError": "", "lastTestcase": "", "__typename": "SubmissionOutputNode"}, "__typename": "GeneralSubmissionNode", "submissionComment": null}}