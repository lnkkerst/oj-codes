{
  "simple": {
    "id": 61763093,
    "lang": "C++",
    "time": "1\u00a0\u5e74\uff0c11\u00a0\u6708",
    "status_display": "Runtime Error",
    "runtime": "N/A",
    "url": "/submissions/detail/61763093/",
    "is_pending": "Not Pending",
    "title": "O(1) \u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20 - \u5141\u8bb8\u91cd\u590d",
    "timestamp": 1586583636,
    "memory": "N/A"
  },
  "full": {
    "id": "61763093",
    "code": "class RandomizedCollection {\npublic:\n    /** Initialize your data structure here. */\n    unordered_set<int> b;\n    RandomizedCollection() {\n        b.clear();\n        srand(time(NULL));\n    }\n    \n    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */\n    bool insert(int val) {\n        if(b.find(val) != b.end()) return 0;\n        b.insert(val);\n        return 1;\n    }\n    \n    /** Removes a value from the collection. Returns true if the collection contained the specified element. */\n    bool remove(int val) {\n        if(b.find(val) == b.end()) return 0;\n        b.erase(b.find(val));\n        return 1;\n    }\n    \n    /** Get a random element from the collection. */\n    int getRandom() {\n        return *b.begin();\n    }\n};\n\n/**\n * Your RandomizedCollection object will be instantiated and called as such:\n * RandomizedCollection* obj = new RandomizedCollection();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */",
    "runtime": "N/A",
    "memory": "N/A",
    "rawMemory": "N/A",
    "statusDisplay": "Runtime Error",
    "timestamp": 1586583636,
    "lang": "cpp",
    "passedTestCaseCnt": 1,
    "totalTestCaseCnt": 31,
    "sourceUrl": "/problems/insert-delete-getrandom-o1-duplicates-allowed/",
    "question": {
      "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
      "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "translatedTitle": "O(1) \u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20 - \u5141\u8bb8\u91cd\u590d",
      "questionId": "381",
      "__typename": "QuestionNode"
    },
    "outputDetail": {
      "codeOutput": "",
      "expectedOutput": "[null,true,false,true,1]",
      "input": "[\"RandomizedCollection\",\"insert\",\"insert\",\"remove\",\"getRandom\"]\n[[],[1],[1],[1],[]]",
      "compileError": "",
      "runtimeError": "Line 341: Char 30: runtime error: member call on null pointer of type 'std::__detail::_Hash_node_value_base<int>' (hashtable_policy.h)",
      "lastTestcase": "[\"RandomizedCollection\",\"insert\",\"insert\",\"remove\",\"getRandom\"]\n[[],[1],[1],[1],[]]",
      "__typename": "SubmissionOutputNode"
    },
    "__typename": "GeneralSubmissionNode",
    "submissionComment": null
  }
}
