{"simple": {"id": 61761374, "lang": "C++", "time": "1\u00a0\u5e74\uff0c11\u00a0\u6708", "status_display": "Accepted", "runtime": "140 ms", "url": "/submissions/detail/61761374/", "is_pending": "Not Pending", "title": "O(1) \u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20", "timestamp": 1586583253, "memory": "20.2 MB"}, "full": {"id": "61761374", "code": "class RandomizedSet {\npublic:\n    /** Initialize your data structure here. */\n    unordered_set<int> b;\n    RandomizedSet() {\n        b.clear();\n        srand(time(NULL));\n    }\n    \n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\n    bool insert(int val) {\n        if(b.find(val) != b.end()) return 0;\n        b.insert(val);\n        return 1;\n    }\n    \n    /** Removes a value from the set. Returns true if the set contained the specified element. */\n    bool remove(int val) {\n        if(b.find(val) == b.end()) return 0;\n        b.erase(b.find(val));\n        return 1;\n    }\n    \n    /** Get a random element from the set. */\n    int getRandom() {\n        int rk = rand() % b.size();\n        auto i = b.begin();\n        for(int j = 0; j < rk; ++j)\n            ++i;\n        return *i;\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */", "runtime": "140 ms", "memory": "20.2 MB", "rawMemory": "20676000", "statusDisplay": "Accepted", "timestamp": 1586583253, "lang": "cpp", "passedTestCaseCnt": 18, "totalTestCaseCnt": 19, "sourceUrl": "/problems/insert-delete-getrandom-o1/", "question": {"titleSlug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "translatedTitle": "O(1) \u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20", "questionId": "380", "__typename": "QuestionNode"}, "outputDetail": {"codeOutput": "", "expectedOutput": "", "input": "", "compileError": "", "runtimeError": "", "lastTestcase": "", "__typename": "SubmissionOutputNode"}, "__typename": "GeneralSubmissionNode", "submissionComment": null}}