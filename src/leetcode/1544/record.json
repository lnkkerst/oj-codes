{
  "simple": {
    "id": 71311663,
    "lang": "C++",
    "time": "1\u00a0\u5e74\uff0c10\u00a0\u6708",
    "status_display": "Wrong Answer",
    "runtime": "N/A",
    "url": "/submissions/detail/71311663/",
    "is_pending": "Not Pending",
    "title": "\u7edf\u8ba1\u4e8c\u53c9\u6811\u4e2d\u597d\u8282\u70b9\u7684\u6570\u76ee",
    "timestamp": 1589639976,
    "memory": "N/A"
  },
  "full": {
    "id": "71311663",
    "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* u, int &ans, int last) {\n        // cout << u->val << ' ' << last << endl;\n        if(last <= u->val) ++ans;\n        last = max(last, u->val);\n        if(u->left) dfs(u->left, ans, last);\n        if(u->right) dfs(u->right, ans, last);\n    }\n    int goodNodes(TreeNode* root) {\n        int ans = 0;\n        dfs(root, ans, -1);\n        return ans;\n    }\n};",
    "runtime": "N/A",
    "memory": "N/A",
    "rawMemory": "N/A",
    "statusDisplay": "Wrong Answer",
    "timestamp": 1589639976,
    "lang": "cpp",
    "passedTestCaseCnt": 49,
    "totalTestCaseCnt": 63,
    "sourceUrl": "/problems/count-good-nodes-in-binary-tree/",
    "question": {
      "titleSlug": "count-good-nodes-in-binary-tree",
      "title": "Count Good Nodes in Binary Tree",
      "translatedTitle": "\u7edf\u8ba1\u4e8c\u53c9\u6811\u4e2d\u597d\u8282\u70b9\u7684\u6570\u76ee",
      "questionId": "1544",
      "__typename": "QuestionNode"
    },
    "outputDetail": {
      "codeOutput": "2",
      "expectedOutput": "4",
      "input": "[-4,-4,5,null,null,4,-5,-5,2,1,null,null,-2,null,5,null,null,null,-4,null,null,-4,null,2,null,-1]",
      "compileError": "",
      "runtimeError": "",
      "lastTestcase": "[-4,-4,5,null,null,4,-5,-5,2,1,null,null,-2,null,5,null,null,null,-4,null,null,-4,null,2,null,-1]",
      "__typename": "SubmissionOutputNode"
    },
    "__typename": "GeneralSubmissionNode",
    "submissionComment": null
  }
}
