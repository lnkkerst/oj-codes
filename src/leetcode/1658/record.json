{
  "simple": {
    "id": 93807916,
    "lang": "C++",
    "time": "1\u00a0\u5e74\uff0c7\u00a0\u6708",
    "status_display": "Accepted",
    "runtime": "164 ms",
    "url": "/submissions/detail/93807916/",
    "is_pending": "Not Pending",
    "title": "\u6392\u5e03\u4e8c\u8fdb\u5236\u7f51\u683c\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570",
    "timestamp": 1596338641,
    "memory": "25.1 MB"
  },
  "full": {
    "id": "93807916",
    "code": "class Solution {\npublic:\n    int cntC(vector<int>& a) {\n        int ret = 0;\n        for(auto i = a.rbegin(); i != a.rend(); ++i) {\n            if(*i) return ret;\n            ++ret;\n        }\n        return ret;\n    }\n    int minSwaps(vector<vector<int>>& grid) {\n        vector<int> a(grid.size());\n        int n = grid.size(), ans = 0;\n        for(int i = 0; i < n; ++i) a[i] = cntC(grid[i]);\n        for(int i = 0; i < n - 1; ++i) {\n            bool fl = 0;\n            for(int j = i; j < n; ++j) {\n                if(a[j] >= n - i - 1) {\n                    fl = 1;\n                    ans += j - i;\n                    int tmp = a[j];\n                    for(int k = j; k >= i + 1; --k) a[k] = a[k - 1];\n                    a[i] = tmp;\n                    break;\n                }\n            }\n            if(!fl) return -1;\n            // for(auto i : a) cout << i << endl;\n        }\n        return ans;\n    }\n};",
    "runtime": "164 ms",
    "memory": "25.1 MB",
    "rawMemory": "25752000",
    "statusDisplay": "Accepted",
    "timestamp": 1596338641,
    "lang": "cpp",
    "passedTestCaseCnt": 129,
    "totalTestCaseCnt": 129,
    "sourceUrl": "/problems/minimum-swaps-to-arrange-a-binary-grid/",
    "question": {
      "titleSlug": "minimum-swaps-to-arrange-a-binary-grid",
      "title": "Minimum Swaps to Arrange a Binary Grid",
      "translatedTitle": "\u6392\u5e03\u4e8c\u8fdb\u5236\u7f51\u683c\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570",
      "questionId": "1658",
      "__typename": "QuestionNode"
    },
    "outputDetail": {
      "codeOutput": "",
      "expectedOutput": "",
      "input": "",
      "compileError": "",
      "runtimeError": "",
      "lastTestcase": "",
      "__typename": "SubmissionOutputNode"
    },
    "__typename": "GeneralSubmissionNode",
    "submissionComment": null
  }
}
